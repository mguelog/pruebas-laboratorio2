Test cases for class DoubleLinkedListQueue:

- constructor:
    Given a queue
    When initialized with constructor
    Then first and last equals null
    And size equals 0

- append:
	Given an empty queue
	When append a node
	Then first and last equals node

	Given a not empty queue
	When append a node
	Then last equals node

	Given a queue
	When append a null node
	Then raise an exception

	Given a queue
	When append a node
	Then size increments one

- appendLeft:
	Given an empty queue
	When appendLeft a node
	Then first and last equals node

	Given a not empty queue
	When appendLeft a node
	Then first equals node

	Given a queue
	When appendLeft a null node
	Then raise an exception

	Given a queue
	When appendLeft a node
	Then size increments one

- deleteFirst:
	Given an empty queue
	When deleteFirst
	Then raise an exception

	Given a queue with size one
	When deleteFirst
	Then first and last equals null

	Given a queue with size > 1
	When deleteFirst
	Then first equals the second node

	Given a not empty queue
	When deleteFirst
	Then size decreases one

- deleteLast:
	Given an empty queue
	When deleteLast
	Then raise an exception

	Given a queue with size one
	When deleteLast
	Then first and last equals null

	Given a queue with size > 1
	When deleteLast
	Then last equals the penultimate node

	Given a not empty queue
	When deleteLast
	Then size decreases one

- peekFirst:
	Given an empty queue
	When peekFirst
	Then returns null

	Given a not empty queue
	When peekFirst
	Then returns first node

- peekLast:
	Given an empty queue
	When peekLast
	Then returns null

	Given a not empty queue
	When peekLast
	Then returns last node

- size:
    Given a queue with three nodes
    When size
    Then returns three


Test cases for class DequeNode:

- getItem:
    Given a node with null item
    When getItem
    Then returns null

    Given a node with item equals 5
    When getItem
    Then return 5

- getNext:
    Given a node without next
    When getNext
    Then returns null

    Given a node with next
    When getNext
    Then returns the next node

- getPrevious:
    Given a node without previous
    When getPrevious
    Then returns null

    Given a node with previous
    When getPrevious
    Then returns the previous node

- setNext:
    Given a node
    When setNext a null node
    Then next equals null

    Given a node
    When setNext a not null node
    Then next equals that node

- setPrevious:
    Given a node
    When setPrevious a null node
    Then previous equals null

    Given a node
    When setPrevious a not null node
    Then previous equals that node

- constructor:
    Given a node
    When initialized with constructor
    Then the value of the arguments correspond with the value of his attributes

- isFirstNode:
    Given a node with previous
    When isFirstNode
    Then returns false

    Given a node without previous
    When isFirstNode
    Then returns true

- isLastNode:
    Given a node with next
    When isLastNode
    Then returns false

    Given a node without next
    When isLastNode
    Then returns true

- isNotATerminalNode:
    Given a first node
    When isNotATerminalNode
    Then returns false

    Given a last node
    When isNotATerminalNode
    Then returns false

    Given a node with previous and with next
    When isNotATerminalNode
    Then returns true